8 dict begin
/FontType 3 def % Required elements of font
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [0 0 750 750] def
/Encoding 256 array def % Trivial encoding vector
  0 1 255 {Encoding exch /.notdef put} for
  Encoding 97 /square put % ASCII a = 97
  Encoding 98 /triangle put % ASCII b = 98
  /CharProcs 3 dict def % Subsidiary dictionary for
    CharProcs begin % individual glyph descriptions
    /.notdef { } def
    /square {
      0 0 moveto
      750 0 lineto
      750 750 lineto
      0 750 lineto
      closepath
      fill
    } bind def
    /triangle {
      0 0 moveto
      375 750 lineto
      750 0 lineto
      closepath
      fill
    } bind def
    end % End of CharProcs
  /BuildGlyph { % Stack contains: font charname
    1000 0 % Width
    0 0 750 750 % Bounding box
    setcachedevice
    exch /CharProcs get exch % Get CharProcs dictionary
    2 copy known not % See if charname is known
        {pop /.notdef}
      if
      get exec % Execute BuildGlyph procedure
    } bind def
  /BuildChar { % LanguageLevel 1 compatibility
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
   } bind def
  currentdict
end % End of font dictionary
/ExampleFont exch definefont pop
/ExampleFont findfont 12 scalefont setfont % Now show some characters
36 52 moveto
(ababab) show
